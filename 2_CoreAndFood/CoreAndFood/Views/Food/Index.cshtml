@using X.PagedList
@using X.PagedList.Mvc.Core

@model IPagedList<CoreAndFood.Data.Models.Food>
@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<table class="table table-bordered">
	<tr>
		<th>ID</th>
		<th>Food Name</th>
		<th>Price</th>
		<th>Stock</th>
		<th>Category Name</th>
		<th>Delete</th>
		<th>Update</th>
		<th>Details</th>
	</tr>
	@foreach (var x in Model)
	{
		<tr>
			<td>@x.FoodID</td>
			<td>@x.Name</td>
			<td>₺@x.Price</td>
			<td>@x.Stock</td>
			<td>@x.Category.CategoryName</td>
			<td><a href="/Food/FoodDelete/@x.FoodID" class="btn btn-danger">Delete</a></td>
			<td><a href="/Food/FoodGet/@x.FoodID" class="btn btn-success">Update</a></td>
			<td><a href="#" class="btn btn-info">Details</a></td>
		</tr>
	}
</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }),
					new PagedListRenderOptions
					{
						UlElementClasses = new[] { "pagination" },
						LiElementClasses = new[] { "page-item" },
						PageClasses = new[] { "page-link" },
						DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
						DisplayLinkToNextPage = PagedListDisplayMode.Always,
						// DisplayLinkToFirstPage = PagedListDisplayMode.Always,
						// DisplayLinkToLastPage = PagedListDisplayMode.Always,
					})
<a href="/Food/FoodAdd/" class="btn btn-primary">New Food</a>